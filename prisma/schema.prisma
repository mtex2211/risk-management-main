// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  username   String       @unique
  email      String       @unique
  password   String
  role       Role         @relation(fields: [roleId], references: [id])
  roleId     Int
  risks      Risk[]
  Assessment Assessment[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Risk {
  id           Int          @id @default(autoincrement())
  title        String
  description  String
  severity     Int // You can adjust the type based on your severity scale
  likelihood   Int // Similarly for likelihood
  status       String // e.g., Open, In Progress, Closed
  assignedTo   User?        @relation(fields: [assignedToId], references: [id])
  assignedToId Int?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  Assessment   Assessment[]
}

model Assessment {
  id           Int      @id @default(autoincrement())
  risk         Risk     @relation(fields: [riskId], references: [id])
  riskId       Int
  assessedBy   User     @relation(fields: [assessedById], references: [id])
  assessedById Int
  control      Int
  procedure    String
  response     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
